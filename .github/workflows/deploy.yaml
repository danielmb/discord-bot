name: Deploy to cloud

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: deploy discord commands
        env:
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
          DISCORD_CLIENT_ID: ${{ secrets.DISCORD_CLIENT_ID }}
        run: npm run discord:deploy

      - name: Install SSH key
        run: |
          # allow environment variables to be passed to the remote server
          echo "Allowing environment variables to be passed to the remote server"
          echo "AcceptEnv *" | sudo tee -a /etc/ssh/sshd_config
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIV_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -t rsa ${{ secrets.REMOTE_HOST }} >> ~/.ssh/known_hosts

      - name: Connect and deploy using rsync
        run: |
          # ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "ls -la"
          # run npm install after rsync finished at remote server
          # rsync -avz -e "ssh -o StrictHostKeyChecking=no" --exclude 'node_modules' --delete ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:${{ secrets.REMOTE_TARGET }} .
          rsync -avz -e "ssh -o StrictHostKeyChecking=no" --exclude 'node_modules' --delete . ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:${{ secrets.REMOTE_TARGET }}

      - name: Install missing dependencies
        env:
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "cd ${{ secrets.REMOTE_TARGET }} && npm install"

      - name: Start the server
        env:
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "cd ${{ secrets.REMOTE_TARGET }} && pm2 startOrRestart ecosystem.config.js"
      - name: Remove SSH key
        if: always()
        run: rm ~/.ssh/id_rsa

      # - name: Deploy
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.REMOTE_HOST }}
      #     username: ${{ secrets.REMOTE_USER }}
      #     key: ${{ secrets.SSH_PRIV_KEY }}

      #     script: |
